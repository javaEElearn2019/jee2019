
package ru.itpark.graduate.pb.web.clnt.genapi;

import ru.itpark.graduate.pb.commons.Config;
import ru.itpark.graduate.pb.commons.Constants;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "PbWsService", targetNamespace = "http://ws.pb.graduate.itpark.ru/", wsdlLocation = "http://localhost:9090/pbws/pbws?wsdl")
public class PbWsService
    extends Service
{

    private final static URL PBWSSERVICE_WSDL_LOCATION;
    private final static WebServiceException PBWSSERVICE_EXCEPTION;
    private final static QName PBWSSERVICE_QNAME = new QName("http://ws.pb.graduate.itpark.ru/", "PbWsService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            Config conf = Config.getConfig(Constants.CFG_JSFCL_NAME);
            String pbwsUrl = conf.getParam(Config.AK_PBWS_URL);
            //url = new URL("http://localhost:9090/pbws/pbws?wsdl");
            url = new URL(pbwsUrl);
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        PBWSSERVICE_WSDL_LOCATION = url;
        PBWSSERVICE_EXCEPTION = e;
    }

    public PbWsService() {
        super(__getWsdlLocation(), PBWSSERVICE_QNAME);
    }

    public PbWsService(WebServiceFeature... features) {
        super(__getWsdlLocation(), PBWSSERVICE_QNAME, features);
    }

    public PbWsService(URL wsdlLocation) {
        super(wsdlLocation, PBWSSERVICE_QNAME);
    }

    public PbWsService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, PBWSSERVICE_QNAME, features);
    }

    public PbWsService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PbWsService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns PbWs
     */
    @WebEndpoint(name = "PbWsPort")
    public PbWs getPbWsPort() {
        return super.getPort(new QName("http://ws.pb.graduate.itpark.ru/", "PbWsPort"), PbWs.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PbWs
     */
    @WebEndpoint(name = "PbWsPort")
    public PbWs getPbWsPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.pb.graduate.itpark.ru/", "PbWsPort"), PbWs.class, features);
    }

    private static URL __getWsdlLocation() {
        if (PBWSSERVICE_EXCEPTION!= null) {
            throw PBWSSERVICE_EXCEPTION;
        }
        return PBWSSERVICE_WSDL_LOCATION;
    }

}
